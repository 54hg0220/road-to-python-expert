# 集合（Set）的基本概念
# 集合是一个无序、无重复的元素集合。
#
# 用大括号 {} 或 set() 来创建。
#
# 集合底层是哈希表实现的（跟 dict 类似，key 没有 value）。
s = {1, 2, 3}
t = set([2, 3, 4])

# | 操作        | 示例             | 说明          |
# | --------- | -------------- | ----------- |
# | 添加元素      | `s.add(4)`     | 添加一个元素      |
# | 删除元素（安全）  | `s.discard(2)` | 不报错地删除元素    |
# | 删除元素（不安全） | `s.remove(2)`  | 元素不存在会报错    |
# | 清空集合      | `s.clear()`    | 删除所有元素      |
# | 集合长度      | `len(s)`       | 返回元素个数      |
# | 成员判断      | `3 in s`       | 判断元素是否存在    |
# | 遍历集合      | `for i in s:`  | 遍历所有元素（无顺序） |

s = {1, 2, 3}
t = {2, 3, 4}

# | 运算     | Python 语法                             | 示例结果                  |         |
# | ------ | ------------------------------------- | --------------------- | ------- |
# | 并集 ∪   | \`s                                   | t`或`s.union(t)\`      | 两集合所有元素 |
# | 交集 ∩   | `s & t` 或 `s.intersection(t)`         | 两集合公共元素               |         |
# | 差集 −   | `s - t` 或 `s.difference(t)`           | `s` 中独有的元素            |         |
# | 对称差集 ⊕ | `s ^ t` 或 `s.symmetric_difference(t)` | `s` 或 `t` 中独有元素（不含交集） |         |
print(s | t)  # {1, 2, 3, 4} 并集
print(s & t)  # {2, 3}       交集
print(s - t)  # {1}          差集（只在 s）
print(t - s)  # {4}          差集（只在 t）
print(s ^ t)  # {1, 4}       对称差集

# 原地修改集合
# 上面是返回新集合的写法，你也可以原地修改集合：
# | 方法名                                | 等价符号     |       |
# | ---------------------------------- | -------- | ----- |
# | `s.update(t)`                      | \`s      | = t\` |
# | `s.intersection_update(t)`         | `s &= t` |       |
# | `s.difference_update(t)`           | `s -= t` |       |
# | `s.symmetric_difference_update(t)` | `s ^= t` |       |
